import { insertInterval } from '../../algorithms/18-07-2025/insert-Interval';

describe('insertInterval', () => {
  it('вставка в пустой список', () => {
    expect(insertInterval([], [2, 5])).toEqual([[2, 5]]);
  });

  it('вставка без перекрытия - в начало', () => {
    expect(
      insertInterval(
        [
          [5, 7],
          [8, 10],
        ],
        [1, 3],
      ),
    ).toEqual([
      [1, 3],
      [5, 7],
      [8, 10],
    ]);
  });

  it('вставка без перекрытия - в середину', () => {
    expect(
      insertInterval(
        [
          [1, 2],
          [6, 8],
        ],
        [3, 5],
      ),
    ).toEqual([
      [1, 2],
      [3, 5],
      [6, 8],
    ]);
  });

  it('вставка без перекрытия - в конец', () => {
    expect(
      insertInterval(
        [
          [1, 2],
          [3, 4],
        ],
        [6, 8],
      ),
    ).toEqual([
      [1, 2],
      [3, 4],
      [6, 8],
    ]);
  });

  it('вставка с перекрытием одного интервала', () => {
    expect(
      insertInterval(
        [
          [1, 3],
          [6, 9],
        ],
        [2, 5],
      ),
    ).toEqual([
      [1, 5],
      [6, 9],
    ]);
  });

  it('вставка с перекрытием нескольких интервалов', () => {
    expect(
      insertInterval(
        [
          [1, 2],
          [3, 5],
          [6, 7],
          [8, 10],
          [12, 16],
        ],
        [4, 9],
      ),
    ).toEqual([
      [1, 2],
      [3, 10],
      [12, 16],
    ]);
  });

  it('вставка, полностью перекрывающая все', () => {
    expect(
      insertInterval(
        [
          [2, 3],
          [4, 5],
          [6, 7],
        ],
        [1, 10],
      ),
    ).toEqual([[1, 10]]);
  });

  it('вставка равного интервала', () => {
    expect(
      insertInterval(
        [
          [1, 3],
          [6, 9],
        ],
        [6, 9],
      ),
    ).toEqual([
      [1, 3],
      [6, 9],
    ]);
  });
});
